# Generated by Django 3.2.10 on 2021-12-13 14:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BloombergAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(help_text='An account number, or a customer number, is created for every location where billable SIDs (licenses), circuits or services are installed. Multiple account numbers can be created in one location if required for billing / administrative purposes.', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BloombergSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.CharField(help_text='=Subscription Identifier: An SID is a unique number which Bloomberg uses to track the progression of a license. SIDs are also linked to any entitlements or exchanges, allowing them to be carried across various actions. SID attached to a service are considered billable and represent one paid license.', max_length=200)),
                ('bloomberg_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.bloombergaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('zip_code', models.CharField(max_length=200)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('street_nr', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationalEntityTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationalEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('internal_id', models.CharField(blank=True, help_text='ID from your organizations ERP system', max_length=300, null=True)),
                ('bbg_lei_code', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ManyToManyField(help_text='It is preferred to only use this field, when the entity is best described by only one location', to='api.BusinessLocation')),
                ('parent_id', models.ForeignKey(blank=True, help_text='Choose a parent entity', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.organizationalentity')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organizationalentitytypes')),
            ],
        ),
        migrations.CreateModel(
            name='DataConsumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.CharField(help_text='ID from your organizations ERP/HR system', max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('floor', models.CharField(blank=True, max_length=200, null=True)),
                ('seat', models.CharField(blank=True, max_length=200, null=True)),
                ('activity', models.ManyToManyField(blank=True, null=True, to='api.ActivityTags')),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.building')),
                ('job_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.job')),
                ('organizational_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organizationalentity')),
            ],
        ),
        migrations.AddField(
            model_name='building',
            name='building_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.businesslocation'),
        ),
        migrations.CreateModel(
            name='BloombergUUID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bbg_uuid', models.CharField(help_text='= Unique User Identifier A UUID is a unique number assigned to every Bloomberg login (username).', max_length=200)),
                ('bloomberg_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.bloombergsubscription')),
                ('data_consumer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.dataconsumer')),
            ],
        ),
        migrations.CreateModel(
            name='BloombergSerialNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloomberg_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.bloombergsubscription')),
            ],
        ),
        migrations.CreateModel(
            name='BloombergFirm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_number', models.CharField(help_text="An account must be under a firm number. Firm number can be regarded as the 'umbrella' number under which all related accounts are grouped. These accounts/entities under the same umbrella have to be in a control relationship with one another or under a common control.", max_length=200)),
                ('organizational_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organizationalentity')),
            ],
        ),
        migrations.AddField(
            model_name='bloombergaccount',
            name='firm_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.bloombergfirm'),
        ),
        migrations.AddField(
            model_name='bloombergaccount',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.businesslocation'),
        ),
    ]
